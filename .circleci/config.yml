version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  stepfunction-ci: vydev/ciorb@0.3.1
commands:
  install-slack-status-prerequisites:
    steps:
      - run:
          name: "Add slack notifier prerequisites"
          command: |
            apk add bash
            apk add curl
  invoke-slack-status:
    steps:
      - slack/status:
          failure_message: A $CIRCLE_JOB job failed for project << pipeline.project.git_url >> ($CIRCLE_BRANCH)
          fail_only: true
jobs:
  # TODO
  # Move this code into our own ORB
  # https://github.com/nsbno/trafficinfo-orb
  build-source:
    docker:
      - image:  gradle:6.3.0-jdk13
    working_directory: /tmp/workspace
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v3-dependencies-
      - save_cache:
          paths:
            - /root/.gradle
          key: v3-dependencies-{{ checksum "build.gradle.kts" }}
      - run:
          name: Build With Gradle
          command: |
            gradle clean test build jacocoTestReport sonar \
            --no-daemon \
            -Pversion="${CIRCLE_SHA1}" \
            -Dsonar.host.url=$SONAR_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.projectKey=$CIRCLE_PROJECT_REPONAME
      - persist_to_workspace:
          root: ./
          paths:
            - build
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: build/reports/tests/test
  # TODO Update when PR https://github.com/nsbno/utility-circleci-orb/pull/1 is released.
  # Implemented here because orb has no configurable artifacts directory yet for job.
  upload-artifacts:
    docker:
      - image: vydev/circleci-ecr:latest
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Upload source to S3
          command: |
            s3_bucket="929368261477-pipeline-artifact"
            artifacts_dir="artifacts"
            s3_prefix="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/branches/$CIRCLE_BRANCH"
            printf "Contents of current directory '%s':\n" "$(pwd)"
            ls -al $artifacts_dir
            num_dirs="$(find $artifacts_dir -maxdepth 1 -mindepth 1 -type d | wc -l)"
            num_json="$(find $artifacts_dir -maxdepth 1 -mindepth 1 -type f -name "*.json" | wc -l)"
            num_zips="$(find $artifacts_dir -type f -name "*.zip" | wc -l)"
            if [ ! "$num_dirs" -eq 1 ] || [ ! "$num_zips" -gt 0 ]; then
              printf "Expected to find 1 directory and at least 1 zip file, but found %s directories and %s zip files\n" "$num_dirs" "$num_zips"
              exit 1
            fi
            printf "Uploading files from "%s" to s3://%s/%s\n" "$artifacts_dir" "$s3_bucket" "$s3_prefix"
            sha1="$(echo $CIRCLE_SHA1 | cut -c -7)"
            aws s3 sync $artifacts_dir "s3://$s3_bucket" --metadata "tags"="'[\"${sha1}-SHA1\",\"${CIRCLE_BRANCH}-branch\"]'"

  slack-workflow-status:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          color: '#1CBF43'
          message: Success:workflow in job $CIRCLE_BUILD_URL for project << pipeline.project.git_url >> ($CIRCLE_BRANCH)
          include_visit_job_action: false
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-source:
          context: trafficinfo
          post-steps:
            - invoke-slack-status
      - stepfunction-ci/build-docker:
          context: trafficinfo
          ecr_repo_name: "trafficinfo-baseline-micronaut"
          requires:
            - build-source
      - stepfunction-ci/validate-terraform:
          context: trafficinfo
          terraformimage: vydev/terraform:0.12.29
          envs: "service, test, stage, prod"
      - stepfunction-ci/build-repo-zip:
          context: trafficinfo
          name_prefix: "trafficinfo"
          aws_repo_name: "trafficinfo-baseline-micronaut"
          filters:
            branches:
              only: master
          requires:
            - build-source

      # TODO Update when PR https://github.com/nsbno/utility-circleci-orb/pull/1 is released.
      # Implemented here because orb has no configurable artifacts directory yet for job.
      - upload-artifacts:
          context: trafficinfo
#          s3_bucket_name: "929368261477-pipeline-artifact"
          filters:
            branches:
              only: master
          requires:
            - stepfunction-ci/build-repo-zip
      - stepfunction-ci/upload-trigger-event:
          context: trafficinfo
          s3_bucket_name: "929368261477-pipeline-artifact"
          filters:
            branches:
              only: master
          requires:
#            - stepfunction-ci/upload-artifacts
            - upload-artifacts
      - slack-workflow-status:
          context: trafficinfo
          requires:
            - stepfunction-ci/upload-trigger-event