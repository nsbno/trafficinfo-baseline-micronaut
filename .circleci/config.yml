version: 2.1
orbs:
  stepfunction-ci: vydev/ciorb@0.4.3
  trafficinfo:
    orbs:
      slack: circleci/slack@3.4.2

    commands:
      install-slack-status-prerequisites:
        steps:
          - run:
              name: "Add slack notifier prerequisites"
              command: |
                apk add bash
                apk add curl
      invoke-slack-failure:
        steps:
          - slack/status:
              failure_message: ":boom: :point_right: Failure $CIRCLE_JOB job failed for project $CIRCLE_PROJECT_REPONAME ($CIRCLE_BRANCH)"
              fail_only: true

      invoke-slack-success:
        steps:
          - slack/notify:
              color: '#1CBF43'
              message: ":sunglasses: :thumbsup: Success workflow in job $CIRCLE_BUILD_URL for project $CIRCLE_PROJECT_REPONAME ($CIRCLE_BRANCH)"
              include_visit_job_action: false


    executors:
      gradleexecutor:
        docker:
          - image: gradle:6.3.0-jdk13

    jobs:
      build-source:
        executor: gradleexecutor
        working_directory: /tmp/workspace
        steps:
          - checkout
          # Download and cache dependencies
          - restore_cache:
              keys:
                - v3-dependencies-{{ checksum "build.gradle.kts" }}
                # fallback to using the latest cache if no exact match is found
                - v3-dependencies-
          - save_cache:
              paths:
                - /root/.gradle
              key: v3-dependencies-{{ checksum "build.gradle.kts" }}
          - run:
              name: Build With Gradle
              command: |
                gradle clean test build jacocoTestReport sonar \
                --no-daemon \
                -Pversion="${CIRCLE_SHA1}" \
                -Dsonar.host.url=$SONAR_URL \
                -Dsonar.login=$SONAR_TOKEN \
                -Dsonar.projectKey=$CIRCLE_PROJECT_REPONAME
          - persist_to_workspace:
              root: ./
              paths:
                - build
          - run:
              name: Save test results
              command: |
                mkdir -p ~/test-results/junit/
                find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
              when: always
          - store_test_results:
              path: ~/test-results
          - store_artifacts:
              path: ~/test-results/junit
          - store_artifacts:
              path: build/reports/tests/test

      slack-notify-failure:
        docker:
          - image: cimg/base:stable
        steps:
          - invoke-slack-failure

      slack-notify-success:
        docker:
          - image: cimg/base:stable
        steps:
          - invoke-slack-success

jobs:
  # TODO
  # Move this code into our own ORB
  # https://github.com/nsbno/trafficinfo-orb


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - trafficinfo/build-source:
          context: trafficinfo
          post-steps:
            - trafficinfo/invoke-slack-success
            - trafficinfo/invoke-slack-failure

      - stepfunction-ci/build-docker:
          context: trafficinfo
          ecr_repo_name: "trafficinfo-baseline-micronaut"
          requires:
            - trafficinfo/build-source
          post-steps:
            - trafficinfo/invoke-slack-success
            - trafficinfo/invoke-slack-failure

      - stepfunction-ci/validate-terraform:
          context: trafficinfo
          terraformimage: vydev/terraform:0.12.29
          envs: "service, test, stage, prod"
          post-steps:
            - slack/notify:
                message: "stepfunction-ci/validate-terraform done"
      - stepfunction-ci/build-repo-zip:
          context: trafficinfo
          name_prefix: "trafficinfo"
          aws_repo_name: "trafficinfo-baseline-micronaut"
#          filters:
#            branches:
#              only: master
          requires:
            - trafficinfo/build-source
          post-steps:
            - slack/notify:
                message: "stepfunction-ci/build-repo-zip done"
      - stepfunction-ci/upload-artifacts:
          context: trafficinfo
          s3_bucket_name: "929368261477-pipeline-artifact"
#          filters:
#            branches:
#              only: master
          requires:
            - stepfunction-ci/build-repo-zip
          post-steps:
            - slack/notify:
                message: "stepfunction-ci/upload-artifacts done"
      - stepfunction-ci/upload-trigger-event:
          context: trafficinfo
          s3_bucket_name: "929368261477-pipeline-artifact"
          filters:
            branches:
              only: master
          requires:
            - stepfunction-ci/build-docker
            - stepfunction-ci/upload-artifacts