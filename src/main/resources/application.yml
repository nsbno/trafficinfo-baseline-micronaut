micronaut:
  application:
    name: baseline-micronaut
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
  caches:
    discovery-client:
      enabled: false

  server:
    # let system environment variable override context-path if available
    # or else just use / as root. The Dockerfile sets this to /otc matching
    # what the ECS Fargate task is routed as from the load balancer.
    context-path: ${CONTEXT_PATH:/}
    port: 8080

  security:
    token:
      roles-name: "scope"
      roles-separator: " " # Separator is space as scope is a space separated list
      jwt:
        # JWT validation, parses incoming Bearer token and validates
        # signatures and attributes against jwks.json.
        #
        # The jwksUrl and centralJwksUrl properties below is stored in cloud SSM as a common parameter
        # under /trafficinfo/config/application for all applications to use
        # and contain the url to the public endpoint where public keys are published
        # to verify signatures in JWT token.
        signatures:
          jwks:
            awscognito:
              url: ${jwksUrl}
            trafficinfoCognito:
              url: ${trafficinfoJwksUrl}
      propagation:
        # propagate only to known services
        # the access token should be treated like normal credentials and not must not be
        # passed to unknown services that could get access to our system by the token.
        enabled: true
        service-id-regex: "whoami|baseline-micronaut"

  http:
    client:
      max-content-length: 104857600 # 100mb max content length
      read-timeout: 60s
    services:
      whoami:
        url: https://services.dev.trafficinfo.vydev.io
        path: /whoami

# for overriding when doing local development
jwksUrl: "https://cognito-idp.eu-west-1.amazonaws.com/eu-west-1_Z53b9AbeT/.well-known/jwks.json"
trafficinfoJwksUrl: "https://cognito-idp.eu-west-1.amazonaws.com/eu-west-1_batNx5RPC/.well-known/jwks.json"

baseUrl: http://localhost:8080
rollinstockServicesBaseUrl: "n/a"
trainCompositonBaseUrl: "n/a"

endpoints:
  health:
    enabled: true
    sensitive: false
    details-visible: ANONYMOUS
    disk-space:
      enabled: false

jackson:
  serialization:
    indentOutput: true
    writeDatesAsTimestamps: false
  deserialization:
    useBigIntegerForInts: true
    failOnUnknownProperties: false
    adjustDatesToContextTimeZone: false
  json-view:
    enabled: true