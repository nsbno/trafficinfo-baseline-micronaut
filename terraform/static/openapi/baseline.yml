openapi: 3.0.1
info:
  title: Micronaut Baseline
  description: Micronaut Baseline project used as template for new microservices.
  contact:
    name: Daniel Engfeldt
    url: https://vy.no
    email: daniel.engfeldt@vy.no
  version: "1.0"
externalDocs:
  description: Internal Application Documentation
  url: https://vygruppen.atlassian.net/wiki/spaces/TRAFFICINFO/pages/3793586330/Developer
servers:
- url: https://services.trafficinfo.vydev.io/micronaut-baseline
  description: production
- url: https://services.stage.trafficinfo.vydev.io/micronaut-baseline
  description: stage
- url: https://services.test.trafficinfo.vydev.io/micronaut-baseline
  description: test
- url: https://services.dev.trafficinfo.vydev.io/micronaut-baseline
  description: dev
paths:
  /changes:
    get:
      summary: '## Return all Change Events from repository.'
      description: "## Return all Change Events from repository. ### Suspending Method\
        \ Support Under the Hood in Micronaut. An \\[interceptor in Micronaut\\](https://github.com/micronaut-projects/micronaut-core/blob/4.0.x/aop/src/main/java/io/micronaut/aop/internal/intercepted/KotlinInterceptedMethodImpl.java)\
        \ is defined that checks if your controller method is marked with the suspend\
        \ keyword. Should use \\[coroutineScope\\](https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-scope)\
        \ for the endpoint. But due to error uses runBlocking as a workaround until\
        \ solution found."
      operationId: changeEventsAll
      responses:
        "200":
          description: changeEventsAll 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeEvent'
            application/x-json-stream:
              schema:
                $ref: '#/components/schemas/ChangeEvent'
              example: null
    post:
      summary: '## Create and return a single change event.'
      description: '## Create and return a single change event. Cant get coroutineScope
        to work with async. See issue https://github.com/micronaut-projects/micronaut-core/issues/8555'
      operationId: changeEventCreate
      responses:
        "202":
          description: changeEventCreate 202 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEvent'
  /secured:
    get:
      summary: '## Create and return a single change event.'
      description: '## Create and return a single change event.'
      operationId: get
      responses:
        "200":
          description: get 200 response
  /whoami:
    get:
      summary: '## Create and return a single change event.'
      description: '## Create and return a single change event.'
      operationId: get_1
      responses:
        "200":
          description: get_1 200 response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    ChangeEvent:
      required:
      - payload
      - version
      type: object
      properties:
        payload:
          type: string
        version:
          type: integer
          format: int64
      description: Is a data class that just contains a random string. Used by ChangeController
        as a simple return type.
  securitySchemes:
    cognito_auth:
      type: apiKey
      description: Use Central Cognito to Authorize requests to microservice.
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        providerARNs:
        - "${provider_arn}"
        type: cognito_user_pools
